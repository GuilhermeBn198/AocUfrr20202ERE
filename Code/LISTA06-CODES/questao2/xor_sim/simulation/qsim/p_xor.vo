// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

// DATE "03/22/2021 17:28:53"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module p_xor (
	in_portA,
	in_portB,
	out_port);
input 	in_portA;
input 	in_portB;
output 	out_port;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \out_port~output_o ;
wire \in_portA~input_o ;
wire \in_portB~input_o ;
wire \out_port~0_combout ;


cyclonev_io_obuf \out_port~output (
	.i(\out_port~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out_port~output_o ),
	.obar());
// synopsys translate_off
defparam \out_port~output .bus_hold = "false";
defparam \out_port~output .open_drain_output = "false";
defparam \out_port~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \in_portA~input (
	.i(in_portA),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\in_portA~input_o ));
// synopsys translate_off
defparam \in_portA~input .bus_hold = "false";
defparam \in_portA~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \in_portB~input (
	.i(in_portB),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\in_portB~input_o ));
// synopsys translate_off
defparam \in_portB~input .bus_hold = "false";
defparam \in_portB~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \out_port~0 (
// Equation(s):
// \out_port~0_combout  = !\in_portA~input_o  $ (!\in_portB~input_o )

	.dataa(!\in_portA~input_o ),
	.datab(!\in_portB~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\out_port~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \out_port~0 .extended_lut = "off";
defparam \out_port~0 .lut_mask = 64'h6666666666666666;
defparam \out_port~0 .shared_arith = "off";
// synopsys translate_on

assign out_port = \out_port~output_o ;

endmodule
